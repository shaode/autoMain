/**
 * Created by wb-xiongsongsong on 14-2-14.
 */
var fs = require('fs')
var path = require('path')

var REQUIRE_RE = /"(?:\\"|[^"])*"|'(?:\\'|[^'])*'|\/\*[\S\s]*?\*\/|\/(?:\\\/|[^\/\r\n])+\/(?=[^\/])|\/\/.*|\.\s*require|(?:^|[^$])\brequire\s*\(\s*(["'])(.+?)\1\s*\)/g
var SLASH_RE = /\\\\/g

function parseDependencies(code) {
    var ret = []
    code.replace(SLASH_RE, "")
        .replace(REQUIRE_RE, function (m, m1, m2) {
            if (m2) {
                ret.push(m2)
            }
        })

    return ret
}

//入口
exports.start = function *() {
    this.moduleCache = {}
    yield exports.read
    //入口文件读取后，将“根路径”设置为入口文件的路径
    return JSON.stringify(this.moduleCache, undefined, 4)
}

//读取文件
exports.read = function (cb) {
    var self = this

    var keys = Object.keys(self.moduleCache)
    var isAllEnd = true
    if (keys.length > 1) {
        for (var i = 0; i < keys.length; i++) {
            if (self.moduleCache[keys[i]].end) {
                continue
            }
            isAllEnd = false
            self.filePath = self.moduleCache[keys[i]].filePath
            break;
        }
    }

    if (isAllEnd === true) {
        cb(null)
        return
    }

    fs.lstat(self.filePath, function (err, stat) {
        if (stat && stat.isFile()) {
            fs.readFile(self.filePath, function (err, buf) {
                self.moduleCache[self.filePath] = {
                    content: buf ? buf.toString() : '',
                    filePath: self.filePath,
                    dirPath: path.dirname(self.filePath)
                }
                //检查是否有新的文件
                var fileList = parseDependencies(buf.toString())
                if (fileList.length < 1) {
                    self.moduleCache[self.filePath].end = true
                } else {
                    for (var j = 0; j < fileList.length; j++) {
                        self.moduleCache[path.join(path.dirname(self.filePath), fileList[j])] = {
                            filePath: path.join(path.dirname(self.filePath), fileList[j])
                        }
                    }
                }

                exports.read.call(self, cb)
            })
        } else {
            self.moduleCache[self.filePath] = {
                content: '\r\n/*404*/\r\n',
                filePath: self.filePath,
                dirPath: path.dirname(self.filePath),
                end: true
            }
            exports.read.call(self, cb)
        }
    })
}
